<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>RSA</TITLE>
<META NAME="Template" CONTENT="D:\Program Files\Microsoft Office\Office\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<P ALIGN="JUSTIFY">Алгоритм RSA это первый полноценный алгоритм с открытым ключом, который можно использовать для шифрования и цифровых подписей. Из всех предложенных за эти годы алгоритмов с открытыми ключами RSA проще всего понять и реализовать. Он также является самым популярным. Названный в честь трех изобретателей - Рона Райвеста (Ron Rivest), Ади Шамира (Adi Shamir) и Леонарда Эдлмана (Leonard Adleman) - этот алгоритм многие годы противостоит интенсивному криптоанализу. Хотя криптоанализ ни доказал, ни опроверг безопасность RSA, он, по сути, обосновывает уровень доверия к алгоритму.</P>
<P ALIGN="JUSTIFY">Безопасность RSA основана на трудности разложения на множители больших чисел . Открытый и закрытый ключи являются функциями двух больших (100 - 200 разрядов или даже больше) простых чисел. Предполагается, что восстановление открытого текста по шифротексту и открытому ключу эквивалентно разложению на множители двух больших чисел.</P>
<P ALIGN="JUSTIFY">Для генерации двух ключей используются два больших случайных простых числа , <I>р </I>и <I>q. </I>Для максимальной безопасности следует выбирать <I>р </I>и <I>q </I>равной длины. Рассчитывается произведение:</P><DIR>

<I><P>n= pq</P></DIR>

</I><P ALIGN="JUSTIFY">Затем случайным образом выбирается ключ шифрования <I>е, </I>такой что <I>е </I>и <I>(р-1)(q-1) </I>являются взаимно простыми числами. Наконец расширенный алгоритм Эвклида используется для вычисления ключа дешифрирования <I>d, </I>такого что</P><DIR>

<I><P>ed=1(mod(p-1)(q-1))</P>
</I><P>Другими словами</P>
<I><P>d = e<SUP>i</SUP> mod ((p-1)(q-1))</P></DIR>

</I><P ALIGN="JUSTIFY">Заметим, что <I>d </I>и <I>n </I>также взаимно простые числа. Числа <I>е </I>и <I>n</I> - это открытый ключ, а число <I>d </I>- закрытый. Два простых числа <I>р </I>и <I>q </I>больше не нужны. Они должны быть отброшены, но не должны быть раскрыты .</P>
<P ALIGN="JUSTIFY">Для шифрования сообщения <I>m </I>оно сначала разбивается на цифровые блоки, меньшие и (для двоичных данных выбирается самая большая степень числа 2, меньшая n). То есть, если <I>р </I>и <I>q - </I>100-разрядные простые числа, то и будет содержать около 200 разрядов, и каждый блок сообщения <I>m<SUB>i</SUB> </I>должен быть около 200 разрядов в длину. (Если нужно зашифровать фиксированное число блоков, их можно дополнить несколькими нулями слева, чтобы гарантировать, что блоки всегда будут меньше n. Зашифрованное сообщение <I>с </I>будет состоять из блоков с<SUB>i</SUB>- той же самой длины. Формула шифрования выглядит так</P><DIR>

<I><P>с<SUB>i</SUB> = m<SUB>i</SUB><SUP>е</SUP> mod n</P>
</I><P>Для расшифровки сообщения возьмите каждый зашифрованный блок c<SUB>i</SUB>- и вычислите</P>
<I><P>m<SUB>i</SUB>= c<SUB>i</SUB><SUP>d</SUP> mod n</P>
</I><P><IMG SRC="algoritm.jpg"></P>
<P><A HREF="index.htm">Вернуться назад.</A></P>
</DIR>
</BODY>
</HTML>
